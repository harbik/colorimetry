{{!-- template/rgbxyz.rs.hbs --}}
//! Rgb to XYZ and XYZ to Rgb conversion matrices for all observers and color spaces used in this library.
//!
//! This file is automatically generated from the xtask template - **do not edit this file manually**.
//! Instead, run `cargo xtask gen` to regenerate it. 
//! Generated on: {{date}}
//! Generated by: xtask/src/rgbxyz.rs

use nalgebra::{Matrix3, ArrayStorage};
use crate::{observer::Observer, rgb::RgbSpace};

impl Observer {
    /// Returns the XYZ to Rgb conversion matrix for the given RGB space.
    pub fn xyz2rgb_matrix(&self, rgb_space: RgbSpace) -> &'static Matrix3<f64> {
        match (self, rgb_space) {
            {{#each entries}}
                {{#if is_inv}}
                    {{#if supplemental_observers}}
                        #[cfg(feature = "supplemental-observers")]
                    {{/if}}
                (Observer::{{observer}}, RgbSpace::{{rgbspace}}) => &{{identifier}},
                {{/if}}
            {{/each}}
        }
    }
}

impl Observer {
    /// Returns the RGB to XYZ conversion matrix for the given RGB space.
    pub fn rgb2xyz_matrix(&self, rgb_space: RgbSpace) -> &'static Matrix3<f64> {
        match (self, rgb_space) {
            {{#each entries}}
                {{#unless is_inv}}
                    {{#if supplemental_observers}}
                        #[cfg(feature = "supplemental-observers")]
                    {{/if}}
                (Observer::{{observer}}, RgbSpace::{{rgbspace}}) => &{{identifier}},
                {{/unless}}
            {{/each}}
        }
    }
}

{{#each entries}}
    {{#if supplemental_observers}}
        #[cfg(feature = "supplemental-observers")]
    {{/if}}
    static {{identifier}} : Matrix3<f64> = Matrix3::from_array_storage(ArrayStorage({{matrix}}));
{{/each}}

